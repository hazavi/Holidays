@page "/"
@using Data
@using MærkeDag
@using Microsoft.EntityFrameworkCore;
@using Microsoft.Extensions.Configuration;
@inject HolidayDbContext dbContext

<h1>Calendar</h1>

<!-- Select Month and Year -->
<div class="select-month">
    <label for="monthSelector"><strong>Select Month:</strong></label>
    <select id="monthSelector" @onchange="ChangeMonth" value="@currentMonth.ToString("yyyy-MM")">
        @foreach (var month in Enumerable.Range(1, 12))
        {
            var date = new DateTime(currentMonth.Year, month, 1);
            <option value="@date.ToString("yyyy-MM")">@date.ToString("MMMM yyyy")</option>
        }
    </select>
</div>


<!-- Calendar Display -->
<div class="calendar">
    <!-- Display the current month and year -->

    <table class="table">
        <thead>
            <!-- Weekday headers (Sun, Mon, Tue, etc.) -->
            <tr>
                @foreach (var day in Enum.GetValues(typeof(DayOfWeek)))
                {
                    <th>@day.ToString().Substring(0, 3)</th>
                }
            </tr>
        </thead>
        <tbody>
            @for (int row = 0; row < 6; row++)
            {
                <tr>
                    @for (int col = 0; col < 7; col++)
                    {
                        var currentDate = new DateTime(currentMonth.Year, currentMonth.Month, 1)
                            .AddDays(row * 7 + col);
                        var isHoliday = holidaysInMonth.Any(h => h.Date.Date == currentDate.Date);
                        var isToday = currentDate.Date == DateTime.Today; // Check if it's today's date

                        <td class="@((isToday) ? "today-cell" : "")"> <!-- Apply the "today-cell" class if it's today -->
                            @if (currentDate.Month == currentMonth.Month)
                            {
                                @currentDate.Day
                                <!-- Holiday Name Display -->
                                @foreach(var holiday in dbContext.Holidays)
                                {
                                  if (holiday.Date == currentDate.Date)
                                    {
                                        <br />
                                        <span class="holiday-text">@holiday.Name</span>
                                    }
                                   
                                }
                                 <!-- Display birthdays -->
                                @foreach (var birthday in dbContext.Birthdays)
                                {
                                    if (birthday.Birthday.Month == currentDate.Month && birthday.Birthday.Day == currentDate.Day)
                                    {
                                        <br />
                                        <span class="birthday-text">@birthday.Name's Birthday</span>
                                    }
                                }
                                
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    
    private List<Holiday> holidays = new List<Holiday>();
    private List<Holiday> holidaysInMonth = new List<Holiday>();
    private DateTime currentMonth = DateTime.Now;
    protected int year = 2023;
    protected string CountryCode = "DK";
    private int selectedYear = DateTime.Now.Year;
    private List<Birth> birthdays = new List<Birth>();

    protected override async Task OnInitializedAsync()
    {
        // Fetch holidays from the API
        holidays = await GetHolidaysAsync();
        holidaysInMonth = HolidayData.GetHolidaysForMonth(currentMonth);
    }

    private async Task<List<Holiday>> GetHolidaysAsync()
    {
        using var httpClient = new HttpClient();
        var response = await httpClient.GetFromJsonAsync<List<Holiday>>($"https://date.nager.at/api/v3/PublicHolidays/{year}/{CountryCode}");
        return response;
    }

    protected override void OnInitialized()
    {
        // Initialize the holidays for the current month using the HolidayData class
        holidaysInMonth = HolidayData.GetHolidaysForMonth(currentMonth);
    }

    private void ChangeMonth(ChangeEventArgs e)
    {
        if (DateTime.TryParse(e.Value.ToString(), out DateTime selectedDate))
        {
            currentMonth = selectedDate;
            holidaysInMonth = HolidayData.GetHolidaysForMonth(currentMonth);
        }
    }
}
